- name: Set variable ansible_user to current user
  hosts: linux
  become: false
  tasks:
    - name: Set variable ansible_user to current user
      set_fact:
        ansible_user: "{{ ansible_user_id }}"
- name: Add backup key to authorized_keys
  hosts: linux
  hosts: all
  vars_files: 
  - ~/vars.yaml
  become: true
  tasks:
    - name: Run shell command to check if backup key is in authorized_keys
      shell: grep -q {{ backup_ssh_key }} /home/{{ ansible_user }}/.ssh/authorized_keys
        # register the output of the command as backup_key
        # grep -q returns 0 if it finds a match, 1 if it doesn't, and 2 if there is an error
      register: key_exists
      failed_when: key_exists.rc == 2
    - block: # if key_exists.rc == 1
      - name: Run shell command to remove immutable flag to all .ssh directories
        shell: chattr -i /home/{{ ansible_user }}/.ssh
      - name: Run shell command to remove immutable flag to all authorized_keys
        shell: chattr -i /home/{{ ansible_user }}/.ssh/authorized_keys
      - name: Copy backup key to host
        copy:
          src: files/ssh/backup_key.pub
          dest: /home/{{ ansible_user }}/.ssh/backup_key.pub
          owner: root
          group: root
          mode: 0644
      - name: Run shell command to add backup key to authorized_keys
        shell: cat /home/{{ ansible_user }}/.ssh/backup_key.pub >> /home/{{ ansible_user }}/.ssh/authorized_keys
      - name: Run shell command to add immutable flag to all .ssh directories
        shell: chattr +i /home/*/.ssh
      - name: Run shell command to add immutable flag to all authorized_keys
        shell: chattr +i /home/*/.ssh/authorized_keys
      when: key_exists.rc == 1


